{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "PowerPulse Dream Team API",
    "description": "API documentation for server",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    { "url": "https://dream-team-backend-10w1.onrender.com/api" },
    { "url": "http://localhost:3000/api" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Products",
      "description": "Products endpoints"
    },
    {
      "name": "Exercises",
      "description": "Exercises endpoints"
    },
    {
      "name": "Diary",
      "description": "Diary endpoints"
    },
    {
      "name": "Statistics",
      "description": "Retrieve statistics for the application"
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Email in use",
            "content": {}
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Email or password is wrong",
            "content": {}
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "User's info",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "Successful operation",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/users/update": {
      "patch": {
        "tags": ["Auth"],
        "summary": "User patch settings",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Settings' object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUsersRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUsersResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/users/avatars": {
      "patch": {
        "tags": ["Auth"],
        "summary": "User's avatar",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Avatar file",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "avatarURL": {
                          "type": "string",
                          "description": "User's avatar url"
                        }
                      }
                    }
                  },
                  "example": {
                    "data": {
                      "avatarURL": "https://res.cloudinary.com/durrb9z9q/image/upload/v1709993513/avatars/65eb63106e294ebc0dc61ae2.jpg"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
     "/diary/exercise": {
      "post": {
        "tags": ["Diary"],
        "summary": "Diary entry exercise",
        "parameters": [],
        "requestBody": {
          "description": "add exercise object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addExerciseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/addExerciseResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
            
          }
        }
      }
    },

    "/diary/product": {
      "post": {
        "tags": ["Diary"],
        "summary": "Diary entry product",
        "parameters": [],
        "requestBody": {
          "description": "add product object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addProductRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/addProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    },

    "/exercise/:id":{
      "delete":{
        "tags": ["Diary"],
         "summary": "Diary delete exercise",
        "parameters": [{"in":"string", "required": true,"name":"id"}],
        "responses":{
          
          "200": {
            "description": "Exercise deleted from diary successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/delExerciseResponse"
                }
              }
            }
          },
          "404": {
            "description": "Exercise not found in diary"
                 },
                 "400": {
            "description": "Bad request (invalid request body)"
            
          }
        }
        
      }
    },
     "/product/:id":{
      "delete":{
        "tags": ["Diary"],
         "summary": "Diary delete product",
        "parameters": [{"in":"string", "required": true,"name":"id"}],
        "responses":{
          
          "200": {
            "description": "Product deleted from diary successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/delProductResponse"
                }
              }
            }
          },
          "404": {
            "description": "Product not found in diary"
                 },
                 "400": {
            "description": "Bad request (invalid request body)"
            
          }
        }
        
      }
    },
    "/entry":{
      "get":{
        "tags":["Diary"],
        "summary": "Diary entry ",
        "requestBody": {
          "description": "get diary entry",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/diaryEntryeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/diaryEntrytResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid date format)",
            "content": {}
          },
          "404":{
            "description":"for this date no entry"          }
        }
        
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string",
                "description": "User's jwt token"
              }
            }
          }
        },
        "example": {
          "data": {
            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1OWZjNGZhNzc4MjE4MjEyY2RkZGI5YSIsImlhdCI6MTcwNDk2OTQ2NiwiZXhwIjoxNzA1MDU1ODY2fQ.mjIVXDKk3-W22awzxy3EWSgOBwrG8Rwnzs8UqpqmFww"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "UpdateUsersRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Name"
          },
          "height": {
            "type": "number",
            "description": "minimum 150(cm); required",
            "example": 150
          },
          "currentWeight": {
            "type": "number",
            "description": "minimum 35(kg); required",
            "example": 35
          },
          "desiredWeight": {
            "type": "number",
            "description": "minimum 35(kg); required",
            "example": 35
          },
          "birthday": {
            "type": "string",
            "description": "iso string, must be older than 18 years;  required",
            "example": "2005-01-11T00:00:00.000Z"
          },
          "blood": {
            "type": "number",
            "description": "allowed values 1, 2, 3, 4; require",
            "example": 1
          },
          "sex": {
            "type": "string",
            "description": "allowed values \"male\", \"female\"; required",
            "example": "male"
          },
          "levelActivity": {
            "type": "number",
            "description": "allowed values 1, 2, 3, 4, 5; required",
            "example": 1
          }
        }
      },
      "UpdateUsersResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name"
              },
              "dailyActivity": {
                "type": "number",
                "description": ""
              },
              "height": {
                "type": "number",
                "description": ""
              },
              "currentWeight": {
                "type": "number",
                "description": ""
              },
              "desiredWeight": {
                "type": "number",
                "description": ""
              },
              "birthday": {
                "type": "string",
                "description": ""
              },
              "blood": {
                "type": "number",
                "description": ""
              },
              "sex": {
                "type": "string",
                "description": "male or female"
              },
              "levelActivity": {
                "type": "number",
                "description": "1, 2, 3, 4, 5"
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatar url"
              },
              "bmr": {
                "type": "number",
                "description": ""
              }
            }
          }
        }
      },
      "UsersResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email"
              },
              "name": {
                "type": "string",
                "description": "User's name"
              },
              "dailyActivity": {
                "type": "number",
                "description": ""
              },
              "height": {
                "type": "number",
                "description": ""
              },
              "currentWeight": {
                "type": "number",
                "description": ""
              },
              "desiredWeight": {
                "type": "number",
                "description": ""
              },
              "birthday": {
                "type": "string",
                "description": ""
              },
              "blood": {
                "type": "number",
                "description": ""
              },
              "sex": {
                "type": "string",
                "description": "male or female"
              },
              "levelActivity": {
                "type": "number",
                "description": "1, 2, 3, 4, 5"
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatar url"
              },
              "bmr": {
                "type": "number",
                "description": ""
              }
            }
          },
          "token": {
            "type": "number",
            "description": ""
          }
        },
        "example": {
          "user": {
            "name": "name",
            "email": "test@test.com",
            "dailyActivity": 110,
            "height": 180,
            "currentWeight": 70,
            "desiredWeight": 60,
            "birthday": "2005-01-11T00:00:00.000Z",
            "blood": 1,
            "sex": "male",
            "levelActivity": 3,
            "avatarURL": "https://res.cloudinary.com/durrb9z9q/image/upload/v1709993513/avatars/65eb63106e294ebc0dc61ae2.jpg",
            "bmr": 2345
          },
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1ZWI2MzEwNmUyOTRlYmMwZGM2MWFlMiIsImlhdCI6MTcwOTk5MzMyOSwiZXhwIjoxNzEwMDc2MTI5fQ.Ng7K8CwCRsexPGSmbPSUYwPKIVGQTyFMlM8455kv7Wo"
        }
      },
         "addExerciseRequest": {
        "type": "object",
        "required": ["date", "exercises", "exerciseID"],
        "properties": {
          "date": {
            "type": "string",
            "description": "date of entry",
            "example": "22-03-2024"
          },
          "exercises": {
            "type": "object",
            "required": ["exerciseID", "time", "calories"],
            "properties": {
              "exerciseID": {
                "type": "string",
                "description": "date of entry",
                "example": "64f2458d6f67bc34bae4f86d"
              },
              "time": {
                "type": "string",
                "description": "time sport",
                "example": "6"
              },
              "calories": {
                "type": "string",
                "description": "calories burned",
                "example": "100"
              }
            }
          }
        }
      },

      "addExerciseResponse": {
        "type": "object",

        "example": {
          "_id": "65eab6816fcca1a5f529c300",
          "owner": "65e585c815811863f8acd028",
          "date": "14-03-3004",
          "consumedCalories": 200,
          "burnedCalories": 500,
          "sportTime": 35,
          "products": [
            {
              "productID": "5d51694902b2373622ff5773",
              "amount": 7,
              "calories": 100,
              "_id": "65eab6de9afdb1eb9926efbe"
            },
            {
              "productID": "5d51694902b2373622ff5773",
              "amount": 7,
              "calories": 100,
              "_id": "65eab6e19afdb1eb9926efc7"
            }
          ],
          "exercises": [
            {
              "exerciseID": "64f2458d6f67bc34bae4f86d",
              "time": 7,
              "calories": 100,
              "_id": "65eb3c6b0141879375ced4d3"
            },
            {
              "exerciseID": "64f2458d6f67bc34bae4f86d",
              "time": 7,
              "calories": 100,
              "_id": "65eb3c6d0141879375ced4dd"
            },
            {
              "exerciseID": "64f2458d6f67bc34bae4f86d",
              "time": 7,
              "calories": 100,
              "_id": "65eb3c6f0141879375ced4e9"
            },
            {
              "exerciseID": "64f2458d6f67bc34bae4f86d",
              "time": 7,
              "calories": 100,
              "_id": "65eb456f243855f9fb73971d"
            },
            {
              "exerciseID": "64f2458d6f67bc34bae4f86d",
              "time": 7,
              "calories": 100,
              "_id": "65ec820b85f45de0da6905e6"
            }
          ],
          "createdAt": "2024-03-08T06:56:01.542Z",
          "updatedAt": "2024-03-09T15:36:43.775Z"
        }
      },

      "addProductRequest": {
        "type": "object",
        "required": ["date", "product", "productID"],
        "properties": {
          "date": {
            "type": "string",
            "description": "date of entry",
            "example": "22-03-2024"
          },
          "products": {
            "type": "object",
            "required": ["productID", "amount", "calories"],
            "properties": {
              "productID": {
                "type": "string",
                "description": "date of entry",
                "example": "5d51694902b2373622ff5773"
              },
              "amount": {
                "type": "string",
                "description": "gramm product",
                "example": "6"
              },
              "calories": {
                "type": "string",
                "description": "calories condumed",
                "example": "100"
              }
            }
          }
        }
      },

      "addProductResponse": {
        "type": "object",
        "example": {
          "_id": "65eab6816fcca1a5f529c300",
          "owner": "65e585c815811863f8acd028",
          "date": "14-03-3004",
          "consumedCalories": 300,
          "burnedCalories": 600,
          "sportTime": 42,
          "products": [
            {
              "productID": {
                "_id": "5d51694902b2373622ff5773",
                "weight": 100,
                "calories": 340,
                "category": "dairy",
                "title": "Danbo cheese",
                "groupBloodNotAllowed": {
                  "1": true,
                  "2": true,
                  "3": false,
                  "4": false
                }
              },
              "amount": 7,
              "calories": 100,
              "_id": "65eab6de9afdb1eb9926efbe"
            },
            {
              "productID": {
                "_id": "5d51694902b2373622ff5773",
                "weight": 100,
                "calories": 340,
                "category": "dairy",
                "title": "Danbo cheese",
                "groupBloodNotAllowed": {
                  "1": true,
                  "2": true,
                  "3": false,
                  "4": false
                }
              },
              "amount": 7,
              "calories": 100,
              "_id": "65eab6e19afdb1eb9926efc7"
            },
            {
              "productID": {
                "_id": "5d51694902b2373622ff5773",
                "weight": 100,
                "calories": 340,
                "category": "dairy",
                "title": "Danbo cheese",
                "groupBloodNotAllowed": {
                  "1": true,
                  "2": true,
                  "3": false,
                  "4": false
                }
              },
              "amount": 7,
              "calories": 100,
              "_id": "65ecbdaff46fe48c28675928"
            }
          ],
          "exercises": [
            {
              "exerciseID": "64f2458d6f67bc34bae4f86d",
              "time": 7,
              "calories": 100,
              "_id": "65eb3c6b0141879375ced4d3"
            },
            {
              "exerciseID": "64f2458d6f67bc34bae4f86d",
              "time": 7,
              "calories": 100,
              "_id": "65eb3c6d0141879375ced4dd"
            },
            {
              "exerciseID": "64f2458d6f67bc34bae4f86d",
              "time": 7,
              "calories": 100,
              "_id": "65eb3c6f0141879375ced4e9"
            },
            {
              "exerciseID": "64f2458d6f67bc34bae4f86d",
              "time": 7,
              "calories": 100,
              "_id": "65eb456f243855f9fb73971d"
            },
            {
              "exerciseID": "64f2458d6f67bc34bae4f86d",
              "time": 7,
              "calories": 100,
              "_id": "65ec820b85f45de0da6905e6"
            },
            {
              "exerciseID": "64f2458d6f67bc34bae4f86d",
              "time": 7,
              "calories": 100,
              "_id": "65ec8d9ce12cb7396f68c2cf"
            }
          ],
          "createdAt": "2024-03-08T06:56:01.542Z",
          "updatedAt": "2024-03-09T19:51:11.423Z"
        }
      },
      "delExerciseResponse":{
        "type":"object",
        "example":{ "message": "Exercise deleted from diary successfully" }
      },
       "delProductResponse":{
        "type":"object",
        "example":{ "message": "Product deleted from diary successfully" }
      },
      "diaryEntryeRequest":{
        "type": "object",
        "required": ["date"],
        "properties": {
          "date": {
            "type": "string",
            "description": "date of entry",
            "example": "22-03-2024"
          }}
      },
      "diaryEntrytResponse":{
        "type":"object",
        "example":{
    "_id": "65eab6816fcca1a5f529c300",
    "owner": "65e585c815811863f8acd028",
    "date": "14-03-3004",
    "consumedCalories": 300,
    "burnedCalories": 600,
    "sportTime": 42,
    "products": [
        {
            "productID": {
                "_id": "5d51694902b2373622ff5773",
                "weight": 100,
                "calories": 340,
                "category": "dairy",
                "title": "Danbo cheese",
                "groupBloodNotAllowed": {
                    "1": true,
                    "2": true,
                    "3": false,
                    "4": false
                }
            },
            "amount": 7,
            "calories": 100,
            "_id": "65eab6de9afdb1eb9926efbe"
        },
        {
            "productID": {
                "_id": "5d51694902b2373622ff5773",
                "weight": 100,
                "calories": 340,
                "category": "dairy",
                "title": "Danbo cheese",
                "groupBloodNotAllowed": {
                    "1": true,
                    "2": true,
                    "3": false,
                    "4": false
                }
            },
            "amount": 7,
            "calories": 100,
            "_id": "65eab6e19afdb1eb9926efc7"
        },
        {
            "productID": {
                "_id": "5d51694902b2373622ff5773",
                "weight": 100,
                "calories": 340,
                "category": "dairy",
                "title": "Danbo cheese",
                "groupBloodNotAllowed": {
                    "1": true,
                    "2": true,
                    "3": false,
                    "4": false
                }
            },
            "amount": 7,
            "calories": 100,
            "_id": "65ecbdaff46fe48c28675928"
        }
    ],
    "exercises": [
        {
            "exerciseID": {
                "_id": "64f2458d6f67bc34bae4f86d",
                "bodyPart": "upper legs",
                "equipment": "body weight",
                "gifUrl": "https://ftp.goit.study/img/power-pulse/gifs/0130.gif",
                "name": "bench hip extension",
                "target": "glutes",
                "burnedCalories": 164,
                "time": 3
            },
            "time": 7,
            "calories": 100,
            "_id": "65eb3c6b0141879375ced4d3"
        },
        {
            "exerciseID": {
                "_id": "64f2458d6f67bc34bae4f86d",
                "bodyPart": "upper legs",
                "equipment": "body weight",
                "gifUrl": "https://ftp.goit.study/img/power-pulse/gifs/0130.gif",
                "name": "bench hip extension",
                "target": "glutes",
                "burnedCalories": 164,
                "time": 3
            },
            "time": 7,
            "calories": 100,
            "_id": "65eb3c6d0141879375ced4dd"
        },
        {
            "exerciseID": {
                "_id": "64f2458d6f67bc34bae4f86d",
                "bodyPart": "upper legs",
                "equipment": "body weight",
                "gifUrl": "https://ftp.goit.study/img/power-pulse/gifs/0130.gif",
                "name": "bench hip extension",
                "target": "glutes",
                "burnedCalories": 164,
                "time": 3
            },
            "time": 7,
            "calories": 100,
            "_id": "65eb3c6f0141879375ced4e9"
        },
        {
            "exerciseID": {
                "_id": "64f2458d6f67bc34bae4f86d",
                "bodyPart": "upper legs",
                "equipment": "body weight",
                "gifUrl": "https://ftp.goit.study/img/power-pulse/gifs/0130.gif",
                "name": "bench hip extension",
                "target": "glutes",
                "burnedCalories": 164,
                "time": 3
            },
            "time": 7,
            "calories": 100,
            "_id": "65eb456f243855f9fb73971d"
        },
        {
            "exerciseID": {
                "_id": "64f2458d6f67bc34bae4f86d",
                "bodyPart": "upper legs",
                "equipment": "body weight",
                "gifUrl": "https://ftp.goit.study/img/power-pulse/gifs/0130.gif",
                "name": "bench hip extension",
                "target": "glutes",
                "burnedCalories": 164,
                "time": 3
            },
            "time": 7,
            "calories": 100,
            "_id": "65ec820b85f45de0da6905e6"
        },
        {
            "exerciseID": {
                "_id": "64f2458d6f67bc34bae4f86d",
                "bodyPart": "upper legs",
                "equipment": "body weight",
                "gifUrl": "https://ftp.goit.study/img/power-pulse/gifs/0130.gif",
                "name": "bench hip extension",
                "target": "glutes",
                "burnedCalories": 164,
                "time": 3
            },
            "time": 7,
            "calories": 100,
            "_id": "65ec8d9ce12cb7396f68c2cf"
        }
    ],
    "createdAt": "2024-03-08T06:56:01.542Z",
    "updatedAt": "2024-03-09T19:51:11.423Z"
}
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
